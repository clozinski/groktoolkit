[buildout]
extends =
   grok.cfg
parts =
  checkversions
#  depgraph
#  omelette
  test-grok
  uploadversions
develop = .
extensions = mr.developer
allow-picked-versions = false
include-site-packages = false
auto-checkout =
  grokcore.annotation
  grokcore.catalog
  grokcore.content
  grokcore.formlib
  grokcore.layout
  grokcore.security
  grokcore.site
  grokcore.view
  z3c.autoinclude

[sources]
grokcore.annotation += branch=sylvain-update-toolkit-versions
grokcore.catalog += branch=sylvain-update-toolkit-versions
grokcore.content += branch=sylvain-update-toolkit-versions
grokcore.formlib += branch=sylvain-update-toolkit-versions
grokcore.layout += branch=sylvain-update-toolkit-versions
grokcore.security += branch=sylvain-update-toolkit-versions
grokcore.site += branch=sylvain-update-toolkit-versions
grokcore.view += branch=sylvain-update-toolkit-versions

[checkversions]
recipe = zc.recipe.egg
eggs = z3c.checkversions [buildout]

[depgraph]
recipe = z3c.recipe.depgraph
eggs = ${grok:packages}
extras = True
variants =
  base
  scc

[omelette]
recipe = collective.recipe.omelette
eggs = ${grok:packages}

[test-grok]
recipe = z3c.recipe.compattest
include = ${grok:packages}
exclude =
# compattest will pull in the dependencies for all the extras require
# that are defined in zc.catalog, including a hoist of (deprecated)
# zope.app.* dependencies.
  zc.catalog
# Fanstatic use py.test for testing and compattest cannot deal with that.
  fanstatic
eggs = zope.testrunner
runner-defaults = ['--tests-pattern', '^f?tests$', '-v']

[uploadversions]
recipe = zc.recipe.egg
entry-points = uploadversions=groktoolkit:upload_gtk_versions
eggs =
  groktoolkit
  zest.releaser
